name: Deploy Model to Batch Endpoint

on:
  workflow_run:
    workflows:
      - Build Model
    types:
      - completed

jobs:
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    environment:
      name: Staging

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Install dependencies
        uses: "./.github/templates/install-dependencies"
        with:
          workspace_resource_group: ${{ secrets.RESOURCE_GROUP }}
          workspace_name: mlw${{ secrets.WORKLOAD_IDENTIFIER }}${{ secrets.RESOURCE_INSTANCE }}
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create batch endpoint
        uses: "./.github/templates/create-endpoint"
        with:
          endpoint_type: batch
          endpoint_file: core/deploy/batch/endpoint.yml
          endpoint_suffix: ${{ secrets.WORKLOAD_IDENTIFIER }}${{ secrets.RESOURCE_INSTANCE }}
          log_analytics_workspace_name: law${{ secrets.WORKLOAD_IDENTIFIER }}${{ secrets.RESOURCE_INSTANCE }}

      - name: Create batch deployment
        uses: "./.github/templates/create-deployment"
        with:
          deployment_type: batch
          deployment_file: core/deploy/batch/deployment.yml
          endpoint_file: core/deploy/batch/endpoint.yml
          endpoint_suffix: ${{ secrets.WORKLOAD_IDENTIFIER }}${{ secrets.RESOURCE_INSTANCE }}

      - name: Add variables to data drift job specification
        shell: bash
        run: |
          export INSTRUMENTATION_KEY=$(az resource show -g ${{ secrets.RESOURCE_GROUP }} -n ${{ secrets.APPLICATION_INSIGHTS_NAME }} --resource-type "microsoft.insights/components" --query properties.InstrumentationKey | xargs)

          envsubst '$INSTRUMENTATION_KEY' < core/pipelines/data_drift.yml > core/pipelines/temp_data_drift.yml
          cp core/pipelines/temp_data_drift.yml core/pipelines/data_drift.yml

      - name: Create data drift schedule
        uses: "./.github/templates/schedule-job"
        with:
          schedule_file: core/schedules/data_drift.yml
          log_analytics_workspace_name: law${{ secrets.WORKLOAD_IDENTIFIER }}${{ secrets.RESOURCE_INSTANCE }}

  upload-model-production:
    name: Upload Model to Production
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    environment:
      name: Production

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Download artifacts
        uses: "./.github/templates/download-workflow-artifact"
        with:
          artifact_name: artifacts

      - name: Install dependencies
        uses: "./.github/templates/install-dependencies"
        with:
          workspace_resource_group: ${{ secrets.RESOURCE_GROUP }}
          workspace_name: mlw${{ secrets.WORKLOAD_IDENTIFIER }}${{ secrets.RESOURCE_INSTANCE }}
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Upload and tag model
        run: |
          MODEL_NAME=$(yq '.jobs.register_step.inputs.model_name' < core/pipelines/train_model.yml)
          MODEL_VERSION=$(jq --raw-output '.model_version' model.json | bc -l)

          az ml model create --name $MODEL_NAME --version $MODEL_VERSION --path $MODEL_NAME/model --type mlflow_model
          az ml model update --name $MODEL_NAME --version $MODEL_VERSION \
            --set tags.github_run_id=${{ github.run_id }} tags.github_workflow_url="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: upload-model-production
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    environment:
      name: Production

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Install dependencies
        uses: "./.github/templates/install-dependencies"
        with:
          workspace_resource_group: ${{ secrets.RESOURCE_GROUP }}
          workspace_name: mlw${{ secrets.WORKLOAD_IDENTIFIER }}${{ secrets.RESOURCE_INSTANCE }}
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create batch endpoint
        uses: "./.github/templates/create-endpoint"
        with:
          endpoint_type: batch
          endpoint_file: core/deploy/batch/endpoint.yml
          endpoint_suffix: ${{ secrets.WORKLOAD_IDENTIFIER }}${{ secrets.RESOURCE_INSTANCE }}
          log_analytics_workspace_name: law${{ secrets.WORKLOAD_IDENTIFIER }}${{ secrets.RESOURCE_INSTANCE }}

      - name: Create batch deployment
        uses: "./.github/templates/create-deployment"
        with:
          deployment_type: batch
          deployment_file: core/deploy/batch/deployment.yml
          endpoint_file: core/deploy/batch/endpoint.yml
          endpoint_suffix: ${{ secrets.WORKLOAD_IDENTIFIER }}${{ secrets.RESOURCE_INSTANCE }}

      - name: Create data drift schedule
        uses: "./.github/templates/schedule-job"
        with:
          schedule_file: core/schedules/data_drift.yml
          log_analytics_workspace_name: law${{ secrets.WORKLOAD_IDENTIFIER }}${{ secrets.RESOURCE_INSTANCE }}
