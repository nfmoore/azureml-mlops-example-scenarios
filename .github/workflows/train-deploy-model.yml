name: Train and Deploy Model

on:
  push:
    branches:
      - workflow
  workflow_dispatch:

jobs:
  create-model-staging:
    name: Create Model in Staging
    runs-on: ubuntu-latest

    environment:
      name: Staging

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Install dependencies
        uses: "./.github/template/install-dependencies"
        with:
          workspace_resource_group: ${{ secrets.WORKSPACE_RESOURCE_GROUP }}
          workspace_name: ${{ secrets.WORKSPACE_NAME }}
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}

      # - name: Run pipeline job to train model
      #   uses: "./.github/template/run-job"
      #   with:
      #     job_file: ./core/pipelines/train_model.yml
      #     azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Tag model
        run: |
          MODEL_NAME=$(yq '.jobs.register_step.inputs.model_name' < core/pipelines/train_model.yml)
          MODEL_VERSION=$(az ml model list --name $MODEL_NAME --query "[0].version" | bc -l)

          az ml model update --name $MODEL_NAME --version $MODEL_VERSION \
            --set tags.github_run_id=${{ github.run_id }} tags.github_workflow_url="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

      - name: Download model
        run: |
          MODEL_NAME=$(yq '.jobs.register_step.inputs.model_name' < core/pipelines/train_model.yml)
          MODEL_VERSION=$(az ml model list --name $MODEL_NAME --query "[0].version" | bc -l)

          az ml model download --name $MODEL_NAME --version $MODEL_VERSION --download-path model-artifact
          echo '{"model_name":"'"$MODEL_NAME"'","model_version":"'"$MODEL_VERSION"'"}' > model-artifact/model.json

      - name: Upload model artifact
        uses: actions/upload-artifact@v2
        with:
          name: model-artifact
          path: model-artifact

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: create-model-staging

    environment:
      name: Staging

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      # - name: Install dependencies
      #   uses: "./.github/template/install-dependencies"
      #   with:
      #     workspace_resource_group: ${{ secrets.WORKSPACE_RESOURCE_GROUP }}
      #     workspace_name: ${{ secrets.WORKSPACE_NAME }}
      #     azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}

      # - name: Create online endpoint
      #   uses: "./.github/template/create-endpoint"
      #   with:
      #     endpoint_type: online
      #     endpoint_file: ./core/deploy/online/endpoint.yml
      #     azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
      #     unique_id: ${{ secrets.UNIQUE_ID }}
      #     log_analytics_workspace_name: ${{ secrets.LOG_ANALYTICS_WORKSPACE_NAME }}

      # - name: Create batch endpoint
      #   uses: "./.github/template/create-endpoint"
      #   with:
      #     endpoint_type: batch
      #     endpoint_file: ./core/deploy/batch/endpoint.yml
      #     azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
      #     unique_id: ${{ secrets.UNIQUE_ID }}
      #     log_analytics_workspace_name: ${{ secrets.LOG_ANALYTICS_WORKSPACE_NAME }}

      # - name: Create online deployment
      #   uses: "./.github/template/create-deployment"
      #   with:
      #     deployment_type: online
      #     deployment_file: ./core/deploy/online/deployment.yml
      #     endpoint_file: ./core/deploy/online/endpoint.yml
      #     azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
      #     unique_id: ${{ secrets.UNIQUE_ID }}

      # - name: Create batch deployment
      #   uses: "./.github/template/create-deployment"
      #   with:
      #     deployment_type: batch
      #     deployment_file: ./core/deploy/batch/deployment.yml
      #     endpoint_file: ./core/deploy/batch/endpoint.yml
      #     azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
      #     unique_id: ${{ secrets.UNIQUE_ID }}

  end-to-end-testing:
    name: End to End Testing
    runs-on: ubuntu-latest
    needs: deploy-staging

    environment:
      name: Staging

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      # - name: Install dependencies
      #   uses: "./.github/template/install-dependencies"
      #   with:
      #     workspace_resource_group: ${{ secrets.WORKSPACE_RESOURCE_GROUP }}
      #     workspace_name: ${{ secrets.WORKSPACE_NAME }}
      #     azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}

      # - name: Invoke online endpoint
      #   run: |
      #     ENDPOINT_NAME=$(yq '.name' < core/deploy/online/endpoint.yml)-${{ secrets.UNIQUE_ID }}
      #     DEPLOYMENT_NAME=$(yq '.name' < core/deploy/online/deployment.yml)
      #     echo $ENDPOINT_NAME $DEPLOYMENT_NAME

      #     az ml online-endpoint invoke --name $ENDPOINT_NAME --deployment $DEPLOYMENT_NAME --request-file core/deploy/online/sample.json

      # - name: Send all traffic to deployment
      #   run: |
      #     ENDPOINT_NAME=$(yq '.name' < core/deploy/online/endpoint.yml)-${{ secrets.UNIQUE_ID }}
      #     DEPLOYMENT_NAME=$(yq '.name' < core/deploy/online/deployment.yml)
      #     echo $ENDPOINT_NAME $DEPLOYMENT_NAME

      #     az ml online-endpoint update --name $ENDPOINT_NAME --traffic "$DEPLOYMENT_NAME=100"

  upload-model-production:
    name: Upload Model to Production
    runs-on: ubuntu-latest
    needs: end-to-end-testing

    environment:
      name: Production

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Install dependencies
        uses: "./.github/template/install-dependencies"
        with:
          workspace_resource_group: ${{ secrets.WORKSPACE_RESOURCE_GROUP }}
          workspace_name: ${{ secrets.WORKSPACE_NAME }}
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Download model artifact
        uses: actions/download-artifact@v2
        with:
          name: model-artifact

      - name: Upload model
        run: |
          MODEL_NAME=$(yq '.jobs.register_step.inputs.model_name' < core/pipelines/train_model.yml)
          MODEL_VERSION=$(jq '.model_version' model.json | bc -l)

          az ml model create --name $MODEL_NAME --version $MODEL_VERSION --path $MODEL_NAME/model --type mlflow_model

      - name: Tag model
        run: |
          MODEL_NAME=$(yq '.jobs.register_step.inputs.model_name' < core/pipelines/train_model.yml)
          MODEL_VERSION=$(jq '.model_version' model.json | bc -l)

          az ml model update --name $MODEL_NAME --version $MODEL_VERSION \
            --set tags.github_run_id=${{ github.run_id }} tags.github_workflow_url="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: upload-model-production

    environment:
      name: Production

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Install dependencies
        uses: "./.github/template/install-dependencies"
        with:
          workspace_resource_group: ${{ secrets.WORKSPACE_RESOURCE_GROUP }}
          workspace_name: ${{ secrets.WORKSPACE_NAME }}
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create online endpoint
        uses: "./.github/template/create-endpoint"
        with:
          endpoint_type: online
          endpoint_file: ./core/deploy/online/endpoint.yml
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
          unique_id: ${{ secrets.UNIQUE_ID }}
          log_analytics_workspace_name: ${{ secrets.LOG_ANALYTICS_WORKSPACE_NAME }}

      - name: Create batch endpoint
        uses: "./.github/template/create-endpoint"
        with:
          endpoint_type: batch
          endpoint_file: ./core/deploy/batch/endpoint.yml
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
          unique_id: ${{ secrets.UNIQUE_ID }}
          log_analytics_workspace_name: ${{ secrets.LOG_ANALYTICS_WORKSPACE_NAME }}

      - name: Create online deployment
        uses: "./.github/template/create-deployment"
        with:
          deployment_type: online
          deployment_file: ./core/deploy/online/deployment.yml
          endpoint_file: ./core/deploy/online/endpoint.yml
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
          unique_id: ${{ secrets.UNIQUE_ID }}

      - name: Create batch deployment
        uses: "./.github/template/create-deployment"
        with:
          deployment_type: batch
          deployment_file: ./core/deploy/batch/deployment.yml
          endpoint_file: ./core/deploy/batch/endpoint.yml
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
          unique_id: ${{ secrets.UNIQUE_ID }}

      - name: Send all traffic to deployment
        run: |
          ENDPOINT_NAME=$(yq '.name' < core/deploy/online/endpoint.yml)-${{ secrets.UNIQUE_ID }}
          DEPLOYMENT_NAME=$(yq '.name' < core/deploy/online/deployment.yml)
          echo $ENDPOINT_NAME $DEPLOYMENT_NAME

          az ml online-endpoint update --name $ENDPOINT_NAME --traffic "$DEPLOYMENT_NAME=100"
