{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.18.4.5664",
      "templateHash": "7957845204622906783"
    }
  },
  "parameters": {
    "workloadIdentifier": {
      "type": "string",
      "defaultValue": "[substring(uniqueString(resourceGroup().id), 1, 6)]",
      "maxLength": 6,
      "minLength": 2,
      "metadata": {
        "description": "A unique identifier for the workload."
      }
    },
    "stagingEnvironmentIdentifier": {
      "type": "string",
      "defaultValue": "001",
      "maxLength": 8,
      "minLength": 2,
      "metadata": {
        "description": "A unique identifier for the staging environment."
      }
    },
    "stagingEnvironmentName": {
      "type": "string",
      "defaultValue": "Staging",
      "maxLength": 16,
      "minLength": 2,
      "metadata": {
        "description": "A name for the staging environment."
      }
    },
    "productionEnvironmentIdentifier": {
      "type": "string",
      "defaultValue": "002",
      "maxLength": 8,
      "minLength": 2,
      "metadata": {
        "description": "A unique identifier for the production environment."
      }
    },
    "productionEnvironmentName": {
      "type": "string",
      "defaultValue": "Production",
      "maxLength": 16,
      "minLength": 2,
      "metadata": {
        "description": "A name for the production environment."
      }
    },
    "deploymentLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location of resource deployments."
      }
    },
    "servicePrincipalClientId": {
      "type": "string",
      "metadata": {
        "description": "The client ID of the service principal used to authenticate with Azure services."
      }
    },
    "servicePrincipalSecret": {
      "type": "securestring",
      "metadata": {
        "description": "The secret for the service principal used to authenticate with Azure services."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deploy_azureml_shared",
      "resourceGroup": "[resourceGroup().name]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentLocation": {
            "value": "[parameters('deploymentLocation')]"
          },
          "azureMLRegistryName": {
            "value": "[format('mlr{0}', parameters('workloadIdentifier'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "107697192335138460"
            }
          },
          "parameters": {
            "deploymentLocation": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "azureMLRegistryName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.MachineLearningServices/registries",
              "apiVersion": "2022-10-01-preview",
              "name": "[parameters('azureMLRegistryName')]",
              "location": "[parameters('deploymentLocation')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "regionDetails": [
                  {
                    "location": "[parameters('deploymentLocation')]",
                    "storageAccountDetails": [
                      {
                        "systemCreatedStorageAccount": {
                          "storageAccountHnsEnabled": false,
                          "storageAccountType": "Standard_LRS"
                        }
                      }
                    ],
                    "acrDetails": [
                      {
                        "systemCreatedAcrAccount": {
                          "acrAccountSku": "Premium"
                        }
                      }
                    ]
                  }
                ]
              }
            }
          ]
        }
      }
    },
    {
      "copy": {
        "name": "m_azureml_workspaces",
        "count": "[length(createArray(parameters('stagingEnvironmentIdentifier'), parameters('productionEnvironmentIdentifier')))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('deploy_azureml_workspace_{0}', createArray(parameters('stagingEnvironmentIdentifier'), parameters('productionEnvironmentIdentifier'))[copyIndex()])]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "environmentName": "[if(equals(createArray(parameters('stagingEnvironmentIdentifier'), parameters('productionEnvironmentIdentifier'))[copyIndex()], parameters('stagingEnvironmentIdentifier')), createObject('value', parameters('stagingEnvironmentName')), createObject('value', parameters('productionEnvironmentName')))]",
          "deploymentLocation": {
            "value": "[parameters('deploymentLocation')]"
          },
          "azureMLWorkspaceName": {
            "value": "[format('mlw{0}{1}', parameters('workloadIdentifier'), createArray(parameters('stagingEnvironmentIdentifier'), parameters('productionEnvironmentIdentifier'))[copyIndex()])]"
          },
          "azureMLStorageAccountName": {
            "value": "[format('stmlw{0}{1}', parameters('workloadIdentifier'), createArray(parameters('stagingEnvironmentIdentifier'), parameters('productionEnvironmentIdentifier'))[copyIndex()])]"
          },
          "azuremlKeyVaultName": {
            "value": "[format('kvmlw{0}{1}', parameters('workloadIdentifier'), createArray(parameters('stagingEnvironmentIdentifier'), parameters('productionEnvironmentIdentifier'))[copyIndex()])]"
          },
          "azureMLContainerRegistryName": {
            "value": "[format('crmlw{0}{1}', parameters('workloadIdentifier'), createArray(parameters('stagingEnvironmentIdentifier'), parameters('productionEnvironmentIdentifier'))[copyIndex()])]"
          },
          "azureMLAppInsightsName": {
            "value": "[format('appimlw{0}{1}', parameters('workloadIdentifier'), createArray(parameters('stagingEnvironmentIdentifier'), parameters('productionEnvironmentIdentifier'))[copyIndex()])]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[format('lawmlw{0}{1}', parameters('workloadIdentifier'), createArray(parameters('stagingEnvironmentIdentifier'), parameters('productionEnvironmentIdentifier'))[copyIndex()])]"
          },
          "deploymentScriptName": {
            "value": "[format('ds{0}{1}', parameters('workloadIdentifier'), createArray(parameters('stagingEnvironmentIdentifier'), parameters('productionEnvironmentIdentifier'))[copyIndex()])]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "15821268740461101659"
            }
          },
          "parameters": {
            "environmentName": {
              "type": "string"
            },
            "deploymentLocation": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "azureMLWorkspaceName": {
              "type": "string"
            },
            "azureMlComputeClusterName": {
              "type": "string",
              "defaultValue": "cpu-cluster"
            },
            "azureMLStorageAccountName": {
              "type": "string"
            },
            "azuremlKeyVaultName": {
              "type": "string"
            },
            "azureMLContainerRegistryName": {
              "type": "string"
            },
            "azureMLAppInsightsName": {
              "type": "string"
            },
            "logAnalyticsWorkspaceName": {
              "type": "string"
            },
            "deploymentScriptName": {
              "type": "string"
            }
          },
          "variables": {
            "azureRbacLogAnalyticsReaderRoleId": "73c42c96-874c-492b-b04d-ab87d138a893",
            "tags": {
              "Environment": "[parameters('environmentName')]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.MachineLearningServices/workspaces",
              "apiVersion": "2022-05-01",
              "name": "[parameters('azureMLWorkspaceName')]",
              "location": "[parameters('deploymentLocation')]",
              "tags": "[variables('tags')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "sku": {
                "tier": "Basic",
                "name": "Basic"
              },
              "properties": {
                "friendlyName": "[format('{0} Workspace', parameters('environmentName'))]",
                "storageAccount": "[resourceId('Microsoft.Storage/storageAccounts', parameters('azureMLStorageAccountName'))]",
                "keyVault": "[resourceId('Microsoft.KeyVault/vaults', parameters('azuremlKeyVaultName'))]",
                "applicationInsights": "[resourceId('Microsoft.Insights/components', parameters('azureMLAppInsightsName'))]",
                "containerRegistry": "[resourceId('Microsoft.ContainerRegistry/registries', parameters('azureMLContainerRegistryName'))]",
                "publicNetworkAccess": "Enabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/components', parameters('azureMLAppInsightsName'))]",
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('azureMLContainerRegistryName'))]",
                "[resourceId('Microsoft.KeyVault/vaults', parameters('azuremlKeyVaultName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('azureMLStorageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.MachineLearningServices/workspaces/computes",
              "apiVersion": "2021-04-01",
              "name": "[format('{0}/{1}', parameters('azureMLWorkspaceName'), parameters('azureMlComputeClusterName'))]",
              "location": "[parameters('deploymentLocation')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "computeType": "AmlCompute",
                "properties": {
                  "vmSize": "Standard_DS11_v2",
                  "vmPriority": "Dedicated",
                  "scaleSettings": {
                    "maxNodeCount": 4,
                    "minNodeCount": 0
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('azureMLWorkspaceName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2019-09-01",
              "name": "[parameters('azuremlKeyVaultName')]",
              "location": "[parameters('deploymentLocation')]",
              "tags": "[variables('tags')]",
              "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                  "name": "standard",
                  "family": "A"
                },
                "accessPolicies": []
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2019-04-01",
              "name": "[parameters('azureMLStorageAccountName')]",
              "location": "[parameters('deploymentLocation')]",
              "tags": "[variables('tags')]",
              "kind": "StorageV2",
              "sku": {
                "name": "Standard_LRS"
              },
              "properties": {
                "encryption": {
                  "services": {
                    "blob": {
                      "enabled": true
                    },
                    "file": {
                      "enabled": true
                    }
                  },
                  "keySource": "Microsoft.Storage"
                },
                "supportsHttpsTrafficOnly": true,
                "allowBlobPublicAccess": false,
                "isHnsEnabled": false
              }
            },
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2019-05-01",
              "name": "[parameters('azureMLContainerRegistryName')]",
              "location": "[parameters('deploymentLocation')]",
              "tags": "[variables('tags')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "adminUserEnabled": true
              }
            },
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02-preview",
              "name": "[parameters('azureMLAppInsightsName')]",
              "location": "[parameters('deploymentLocation')]",
              "tags": "[variables('tags')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "Flow_Type": "Redfield",
                "Request_Source": "IbizaMachineLearningExtension",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
              ]
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2020-08-01",
              "name": "[parameters('logAnalyticsWorkspaceName')]",
              "location": "[parameters('deploymentLocation')]",
              "tags": "[variables('tags')]",
              "properties": {}
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-08-01-preview",
              "scope": "[format('Microsoft.OperationalInsights/workspaces/{0}', parameters('logAnalyticsWorkspaceName'))]",
              "name": "[guid(parameters('azureMlComputeClusterName'), parameters('logAnalyticsWorkspaceName'), 'Log Analytics Reader')]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('azureRbacLogAnalyticsReaderRoleId'))]",
                "principalId": "[reference(resourceId('Microsoft.MachineLearningServices/workspaces/computes', split(format('{0}/{1}', parameters('azureMLWorkspaceName'), parameters('azureMlComputeClusterName')), '/')[0], split(format('{0}/{1}', parameters('azureMLWorkspaceName'), parameters('azureMlComputeClusterName')), '/')[1]), '2021-04-01', 'full').identity.principalId]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.MachineLearningServices/workspaces/computes', split(format('{0}/{1}', parameters('azureMLWorkspaceName'), parameters('azureMlComputeClusterName')), '/')[0], split(format('{0}/{1}', parameters('azureMLWorkspaceName'), parameters('azureMlComputeClusterName')), '/')[1])]",
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2020-10-01",
              "name": "[parameters('deploymentScriptName')]",
              "location": "[parameters('deploymentLocation')]",
              "kind": "AzureCLI",
              "properties": {
                "azCliVersion": "2.30.0",
                "timeout": "PT5M",
                "retentionInterval": "PT1H",
                "environmentVariables": [
                  {
                    "name": "AZURE_STORAGE_ACCOUNT",
                    "value": "[parameters('azureMLStorageAccountName')]"
                  },
                  {
                    "name": "AZURE_STORAGE_KEY",
                    "secureValue": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('azureMLStorageAccountName')), '2019-04-01').keys[0].value]"
                  }
                ],
                "scriptContent": "      # Upload data to data store\n\n      SOURCE_CURATED_DATA_PATH='https://raw.githubusercontent.com/nfmoore/azureml-mlops-example-scenarios/development/core/data/curated/01.csv'\n      SOURCE_BATCH_INFERENCE_DATA_PATH='https://raw.githubusercontent.com/nfmoore/azureml-mlops-example-scenarios/development/core/data/inference/batch/01.csv'\n      DESTINATION_CURATED_DATA_PATH='./data/uci-credit-card-default/curated/01.csv'\n      DESTINATION_BATCH_INFERENCE_DATA_PATH='./data/uci-credit-card-default/inference/batch/01.csv'\n\n      SOURCE_CURATED_MLTABLE_PATH='https://raw.githubusercontent.com/nfmoore/azureml-mlops-example-scenarios/development/core/data/curated/MLTable'\n      SOURCE_BATCH_INFERENCE_MLTABLE_PATH='https://raw.githubusercontent.com/nfmoore/azureml-mlops-example-scenarios/development/core/data/inference/batch/MLTable'\n      SOURCE_ONLINE_INFERENCE_MLTABLE_PATH='https://raw.githubusercontent.com/nfmoore/azureml-mlops-example-scenarios/development/core/data/inference/online/MLTable'\n      DESTINATION_CURATED_MLTABLE_PATH='./data/uci-credit-card-default/curated/MLTable'\n      DESTINATION_BATCH_INFERENCE_MLTABLE_PATH='./data/uci-credit-card-default/inference/batch/MLTable'\n      DESTINATION_ONLINE_INFERENCE_MLTABLE_PATH='./data/uci-credit-card-default/inference/online/MLTable'\n\n      curl -o $DESTINATION_CURATED_DATA_PATH $SOURCE_CURATED_DATA_PATH --create-dirs\n      curl -o $DESTINATION_BATCH_INFERENCE_DATA_PATH $SOURCE_BATCH_INFERENCE_DATA_PATH --create-dirs\n\n      curl -o $DESTINATION_CURATED_MLTABLE_PATH $SOURCE_CURATED_MLTABLE_PATH --create-dirs\n      curl -o $DESTINATION_BATCH_INFERENCE_MLTABLE_PATH $SOURCE_BATCH_INFERENCE_MLTABLE_PATH --create-dirs\n      curl -o $DESTINATION_ONLINE_INFERENCE_MLTABLE_PATH $SOURCE_ONLINE_INFERENCE_MLTABLE_PATH --create-dirs\n\n      CONTAINER_NAME=$(az storage container list --account-name $AZURE_STORAGE_ACCOUNT --account-key $AZURE_STORAGE_KEY --query \"[].name\" | grep \"azureml-blobstore-*\" | tr -d ',' | xargs)\n      az storage blob upload-batch --destination $CONTAINER_NAME --account-name $AZURE_STORAGE_ACCOUNT --account-key $AZURE_STORAGE_KEY --destination-path ./data --source ./data\n\n      "
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('azureMLStorageAccountName'))]"
              ]
            }
          ]
        }
      }
    },
    {
      "copy": {
        "name": "m_data_factories",
        "count": "[length(createArray(parameters('stagingEnvironmentIdentifier'), parameters('productionEnvironmentIdentifier')))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('deploy_data_factory_{0}', createArray(parameters('stagingEnvironmentIdentifier'), parameters('productionEnvironmentIdentifier'))[copyIndex()])]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentLocation": {
            "value": "[parameters('deploymentLocation')]"
          },
          "dataFactoryName": {
            "value": "[format('df{0}{1}', parameters('workloadIdentifier'), createArray(parameters('stagingEnvironmentIdentifier'), parameters('productionEnvironmentIdentifier'))[copyIndex()])]"
          },
          "dataFactoryKeyVaultName": {
            "value": "[format('kvdf{0}{1}', parameters('workloadIdentifier'), createArray(parameters('stagingEnvironmentIdentifier'), parameters('productionEnvironmentIdentifier'))[copyIndex()])]"
          },
          "servicePrincipalClientId": {
            "value": "[parameters('servicePrincipalClientId')]"
          },
          "servicePrincipalSecret": {
            "value": "[parameters('servicePrincipalSecret')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "3286325288868263935"
            }
          },
          "parameters": {
            "deploymentLocation": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "dataFactoryName": {
              "type": "string"
            },
            "dataFactoryKeyVaultName": {
              "type": "string"
            },
            "servicePrincipalClientId": {
              "type": "string"
            },
            "addRepositoryConfiguration": {
              "type": "bool",
              "defaultValue": false
            },
            "repositoryAccountName": {
              "type": "string",
              "defaultValue": ""
            },
            "dataFactoryRepositoryName": {
              "type": "string",
              "defaultValue": ""
            },
            "collaborationBranch": {
              "type": "string",
              "defaultValue": ""
            },
            "rootFolder": {
              "type": "string",
              "defaultValue": ""
            },
            "servicePrincipalSecret": {
              "type": "securestring"
            }
          },
          "resources": [
            {
              "type": "Microsoft.DataFactory/factories",
              "apiVersion": "2018-06-01",
              "name": "[parameters('dataFactoryName')]",
              "location": "[parameters('deploymentLocation')]",
              "properties": {
                "repoConfiguration": "[if(parameters('addRepositoryConfiguration'), createObject('accountName', parameters('repositoryAccountName'), 'repositoryName', parameters('dataFactoryRepositoryName'), 'collaborationBranch', parameters('collaborationBranch'), 'rootFolder', parameters('rootFolder'), 'type', 'FactoryGitHubConfiguration'), createObject())]"
              },
              "identity": {
                "type": "SystemAssigned"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2022-07-01",
              "name": "[parameters('dataFactoryKeyVaultName')]",
              "location": "[parameters('deploymentLocation')]",
              "properties": {
                "createMode": "default",
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": true,
                "enableRbacAuthorization": false,
                "enablePurgeProtection": true,
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "Deny"
                },
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "softDeleteRetentionInDays": 7,
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": [
                  {
                    "objectId": "[reference(resourceId('Microsoft.DataFactory/factories', parameters('dataFactoryName')), '2018-06-01', 'full').identity.principalId]",
                    "tenantId": "[subscription().tenantId]",
                    "permissions": {
                      "secrets": [
                        "get",
                        "list"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.DataFactory/factories', parameters('dataFactoryName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('dataFactoryKeyVaultName'), 'clientId')]",
              "properties": {
                "value": "[parameters('servicePrincipalClientId')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('dataFactoryKeyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('dataFactoryKeyVaultName'), 'clientSecret')]",
              "properties": {
                "value": "[parameters('servicePrincipalSecret')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('dataFactoryKeyVaultName'))]"
              ]
            }
          ]
        }
      }
    }
  ]
}