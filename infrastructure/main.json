{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.18.4.5664",
      "templateHash": "16600849041729242948"
    }
  },
  "parameters": {
    "workloadIdentifier": {
      "type": "string",
      "defaultValue": "[substring(uniqueString(resourceGroup().id), 1, 6)]",
      "maxLength": 6,
      "minLength": 2,
      "metadata": {
        "description": "A unique identifier for the workload."
      }
    },
    "stagingEnvironmentIdentifier": {
      "type": "string",
      "defaultValue": "001",
      "maxLength": 8,
      "minLength": 2,
      "metadata": {
        "description": "A unique identifier for the staging environment."
      }
    },
    "productionEnvironmentIdentifier": {
      "type": "string",
      "defaultValue": "002",
      "maxLength": 8,
      "minLength": 2,
      "metadata": {
        "description": "A unique identifier for the production environment."
      }
    },
    "deploymentLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location of resource deployments."
      }
    },
    "servicePrincipalClientId": {
      "type": "string",
      "metadata": {
        "description": "The client ID of the service principal used to authenticate with Azure services."
      }
    },
    "servicePrincipalSecret": {
      "type": "securestring",
      "metadata": {
        "description": "The secret for the service principal used to authenticate with Azure services."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deploy_azureml_shared",
      "resourceGroup": "[resourceGroup().name]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentLocation": {
            "value": "[parameters('deploymentLocation')]"
          },
          "azureMLRegistryName": {
            "value": "[format('mlr{0}', parameters('workloadIdentifier'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "11943191121509310299"
            }
          },
          "parameters": {
            "deploymentLocation": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "azureMLRegistryName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.MachineLearningServices/registries",
              "apiVersion": "2022-12-01-preview",
              "name": "[parameters('azureMLRegistryName')]",
              "location": "[parameters('deploymentLocation')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "regionDetails": [
                  {
                    "location": "[parameters('deploymentLocation')]",
                    "acrDetails": [
                      {
                        "systemCreatedAcrAccount": {
                          "acrAccountSku": "Premium"
                        }
                      }
                    ],
                    "storageAccountDetails": [
                      {
                        "systemCreatedStorageAccount": {
                          "storageAccountHnsEnabled": false,
                          "storageAccountType": "Standard_LRS"
                        }
                      }
                    ]
                  }
                ]
              }
            }
          ]
        }
      }
    },
    {
      "copy": {
        "name": "m_azureml_workspaces",
        "count": "[length(createArray(parameters('stagingEnvironmentIdentifier'), parameters('productionEnvironmentIdentifier')))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('deploy_azureml_workspace_{0}', createArray(parameters('stagingEnvironmentIdentifier'), parameters('productionEnvironmentIdentifier'))[copyIndex()])]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentLocation": {
            "value": "[parameters('deploymentLocation')]"
          },
          "azureMLWorkspaceName": {
            "value": "[format('mlw{0}{1}', parameters('workloadIdentifier'), createArray(parameters('stagingEnvironmentIdentifier'), parameters('productionEnvironmentIdentifier'))[copyIndex()])]"
          },
          "azureMLStorageAccountName": {
            "value": "[format('stmlw{0}{1}', parameters('workloadIdentifier'), createArray(parameters('stagingEnvironmentIdentifier'), parameters('productionEnvironmentIdentifier'))[copyIndex()])]"
          },
          "azuremlKeyVaultName": {
            "value": "[format('kvmlw{0}{1}', parameters('workloadIdentifier'), createArray(parameters('stagingEnvironmentIdentifier'), parameters('productionEnvironmentIdentifier'))[copyIndex()])]"
          },
          "azureMLContainerRegistryName": {
            "value": "[format('crmlw{0}{1}', parameters('workloadIdentifier'), createArray(parameters('stagingEnvironmentIdentifier'), parameters('productionEnvironmentIdentifier'))[copyIndex()])]"
          },
          "azureMLAppInsightsName": {
            "value": "[format('appimlw{0}{1}', parameters('workloadIdentifier'), createArray(parameters('stagingEnvironmentIdentifier'), parameters('productionEnvironmentIdentifier'))[copyIndex()])]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[format('lawmlw{0}{1}', parameters('workloadIdentifier'), createArray(parameters('stagingEnvironmentIdentifier'), parameters('productionEnvironmentIdentifier'))[copyIndex()])]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "2980247096153828891"
            }
          },
          "parameters": {
            "deploymentLocation": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "azureMLWorkspaceName": {
              "type": "string"
            },
            "azureMLStorageAccountName": {
              "type": "string"
            },
            "azuremlKeyVaultName": {
              "type": "string"
            },
            "azureMLContainerRegistryName": {
              "type": "string"
            },
            "azureMLAppInsightsName": {
              "type": "string"
            },
            "logAnalyticsWorkspaceName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.MachineLearningServices/workspaces",
              "apiVersion": "2022-12-01-preview",
              "name": "[parameters('azureMLWorkspaceName')]",
              "location": "[parameters('deploymentLocation')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "keyVault": "[resourceId('Microsoft.KeyVault/vaults', parameters('azuremlKeyVaultName'))]",
                "storageAccount": "[resourceId('Microsoft.Storage/storageAccounts', parameters('azureMLStorageAccountName'))]",
                "applicationInsights": "[resourceId('Microsoft.Insights/components', parameters('azureMLAppInsightsName'))]",
                "containerRegistry": "[resourceId('Microsoft.ContainerRegistry/registries', parameters('azureMLContainerRegistryName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/components', parameters('azureMLAppInsightsName'))]",
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('azureMLContainerRegistryName'))]",
                "[resourceId('Microsoft.KeyVault/vaults', parameters('azuremlKeyVaultName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('azureMLStorageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2022-07-01",
              "name": "[parameters('azuremlKeyVaultName')]",
              "location": "[parameters('deploymentLocation')]",
              "properties": {
                "createMode": "default",
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": true,
                "enableRbacAuthorization": true,
                "enablePurgeProtection": true,
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "Deny"
                },
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "softDeleteRetentionInDays": 7,
                "tenantId": "[subscription().tenantId]"
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-09-01",
              "name": "[parameters('azureMLStorageAccountName')]",
              "location": "[parameters('deploymentLocation')]",
              "kind": "StorageV2",
              "sku": {
                "name": "Standard_LRS"
              },
              "properties": {
                "encryption": {
                  "services": {
                    "blob": {
                      "enabled": true
                    },
                    "file": {
                      "enabled": true
                    }
                  },
                  "keySource": "Microsoft.Storage"
                }
              }
            },
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2023-01-01-preview",
              "name": "[parameters('azureMLContainerRegistryName')]",
              "location": "[parameters('deploymentLocation')]",
              "sku": {
                "name": "Basic"
              },
              "properties": {
                "adminUserEnabled": true
              }
            },
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[parameters('azureMLAppInsightsName')]",
              "location": "[parameters('deploymentLocation')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
                "Flow_Type": "Bluefield"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
              ]
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2022-10-01",
              "name": "[parameters('logAnalyticsWorkspaceName')]",
              "location": "[parameters('deploymentLocation')]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                },
                "retentionInDays": 30,
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Disabled",
                "workspaceCapping": {
                  "dailyQuotaGb": 1
                }
              }
            }
          ]
        }
      }
    },
    {
      "copy": {
        "name": "m_data_factories",
        "count": "[length(createArray(parameters('stagingEnvironmentIdentifier'), parameters('productionEnvironmentIdentifier')))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('deploy_data_factory_{0}', createArray(parameters('stagingEnvironmentIdentifier'), parameters('productionEnvironmentIdentifier'))[copyIndex()])]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deploymentLocation": {
            "value": "[parameters('deploymentLocation')]"
          },
          "dataFactoryName": {
            "value": "[format('df{0}{1}', parameters('workloadIdentifier'), createArray(parameters('stagingEnvironmentIdentifier'), parameters('productionEnvironmentIdentifier'))[copyIndex()])]"
          },
          "dataFactoryKeyVaultName": {
            "value": "[format('kvdf{0}{1}', parameters('workloadIdentifier'), createArray(parameters('stagingEnvironmentIdentifier'), parameters('productionEnvironmentIdentifier'))[copyIndex()])]"
          },
          "servicePrincipalClientId": {
            "value": "[parameters('servicePrincipalClientId')]"
          },
          "servicePrincipalSecret": {
            "value": "[parameters('servicePrincipalSecret')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.18.4.5664",
              "templateHash": "3286325288868263935"
            }
          },
          "parameters": {
            "deploymentLocation": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "dataFactoryName": {
              "type": "string"
            },
            "dataFactoryKeyVaultName": {
              "type": "string"
            },
            "servicePrincipalClientId": {
              "type": "string"
            },
            "addRepositoryConfiguration": {
              "type": "bool",
              "defaultValue": false
            },
            "repositoryAccountName": {
              "type": "string",
              "defaultValue": ""
            },
            "dataFactoryRepositoryName": {
              "type": "string",
              "defaultValue": ""
            },
            "collaborationBranch": {
              "type": "string",
              "defaultValue": ""
            },
            "rootFolder": {
              "type": "string",
              "defaultValue": ""
            },
            "servicePrincipalSecret": {
              "type": "securestring"
            }
          },
          "resources": [
            {
              "type": "Microsoft.DataFactory/factories",
              "apiVersion": "2018-06-01",
              "name": "[parameters('dataFactoryName')]",
              "location": "[parameters('deploymentLocation')]",
              "properties": {
                "repoConfiguration": "[if(parameters('addRepositoryConfiguration'), createObject('accountName', parameters('repositoryAccountName'), 'repositoryName', parameters('dataFactoryRepositoryName'), 'collaborationBranch', parameters('collaborationBranch'), 'rootFolder', parameters('rootFolder'), 'type', 'FactoryGitHubConfiguration'), createObject())]"
              },
              "identity": {
                "type": "SystemAssigned"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2022-07-01",
              "name": "[parameters('dataFactoryKeyVaultName')]",
              "location": "[parameters('deploymentLocation')]",
              "properties": {
                "createMode": "default",
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": true,
                "enableRbacAuthorization": false,
                "enablePurgeProtection": true,
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "Deny"
                },
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "softDeleteRetentionInDays": 7,
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": [
                  {
                    "objectId": "[reference(resourceId('Microsoft.DataFactory/factories', parameters('dataFactoryName')), '2018-06-01', 'full').identity.principalId]",
                    "tenantId": "[subscription().tenantId]",
                    "permissions": {
                      "secrets": [
                        "get",
                        "list"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.DataFactory/factories', parameters('dataFactoryName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('dataFactoryKeyVaultName'), 'clientId')]",
              "properties": {
                "value": "[parameters('servicePrincipalClientId')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('dataFactoryKeyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('dataFactoryKeyVaultName'), 'clientSecret')]",
              "properties": {
                "value": "[parameters('servicePrincipalSecret')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('dataFactoryKeyVaultName'))]"
              ]
            }
          ]
        }
      }
    }
  ]
}